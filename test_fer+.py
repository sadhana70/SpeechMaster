import onnxruntime as ort
import numpy as np
from PIL import Image

emotion_table = {
    0: 'neutral',
    1: 'happiness',
    2: 'surprise',
    3: 'sadness',
    4: 'anger',
    5: 'disgust',
    6: 'fear',
    7: 'contempt'
}

def preprocess(image_path):
  input_shape = (1, 1, 64, 64)
  img = img.resize((64, 64), Image.LANCZOS)
  img_data = np.resize(img_data, input_shape)
  img = Image.open(image_path)
  img_data = np.array(img)
  img_data = img_data.astype(np.float32)
  return img_data

img_path = r'C:\Users\Acer\codes\SpeechMaster\face\happy.png'
image = preprocess(img_path)


def postprocess(scores):
  '''
  This function takes the scores generated by the network and returns the class IDs in decreasing
  order of probability.
  '''
  prob = np.squeeze(scores)
  classes = np.argsort(prob)[::-1]
  return classes

model_path = r'C:\Users\Acer\codes\SpeechMaster\face\model\emotion-ferplus-7.onnx'

session = ort.InferenceSession(model_path)

input_name = session.get_inputs()[0].name
input_data = {input_name: image}

outputs = session.run(None, input_data)
emotion_table[postprocess(outputs)[0]]

print(outputs)

print(emotion_table[postprocess(outputs)[0]])

